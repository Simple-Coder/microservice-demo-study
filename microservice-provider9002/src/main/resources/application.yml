server:
  port: 9002
spring:
  application:
    name: microservice-provider
  datasource:
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://localhost:3306/cloud02?useUnicode=true&autoReconnect=true
      username: root
      password: root
      #连接池补充
      initial-size: 0
      min-idle: 5
      maxActive: 20
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM dual
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: false
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
eureka:
  client:
    service-url:
      defaultZone: http://eureka8001:8001/eureka/,http://eureka8002:8002/eureka/,http://eureka8003:8003/eureka/
  instance:
    instance-id: microservice-provider9002  #自定义服务名称信息
    prefer-ip-address: true #访问路径可以显示IP地址

info:
  app.name: microservice-privder-9002
  company.name: www.baidu.com
  build.artifactId: $project.artifactId$
  build.version:  $project.version$

#mybatis
mybatis:
  IDENTITY: MYSQL
  mapper-basepackege: com.microservice.common.mapper
  mapper-locations:
  #  - classpath*:cgbmappers/*.xml
  - classpath*:commonmappers/*.xml
  mappers: com.microservice.common.base.BaseMapper
  notEmpty: false
  sqlsessionfactory-beanname: sqlSessionFactory
  type-aliases-package: com.microservice.common.model

#Query Page
pageHelper:
  helperDialect: mysql
  params: '"count=countSql"'
  reasonable: true
  returnPageInfo: check
  supportMethodsArguments: true